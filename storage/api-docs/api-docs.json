{
    "openapi": "3.0.0",
    "info": {
        "title": "FlashcardPro API",
        "description": "RESTful API for accessing public flashcard decks and their content. This API allows developers to integrate flashcard data into their applications, access public study materials, and build educational tools.",
        "termsOfService": "https://flashcardpro.com/terms",
        "contact": {
            "name": "FlashcardPro API Support",
            "email": "api@flashcardpro.com"
        },
        "license": {
            "name": "MIT",
            "url": "https://opensource.org/licenses/MIT"
        },
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "http://127.0.0.1:8085",
            "description": "Local Development Server"
        },
        {
            "url": "https://api.flashcardpro.com",
            "description": "Production API Server"
        }
    ],
    "paths": {
        "/api/v1/auth/tokens/{token_id}": {
            "delete": {
                "tags": [
                    "API Tokens"
                ],
                "summary": "Delete an API token",
                "description": "Delete an existing API token for the authenticated user",
                "operationId": "deleteApiToken",
                "parameters": [
                    {
                        "name": "token_id",
                        "in": "path",
                        "description": "API Token ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "API token deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "deleted"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "API token deleted successfully"
                                        },
                                        "timestamp": {
                                            "type": "string",
                                            "format": "date-time"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - Token doesn't belong to user",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "forbidden"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "You do not have permission to perform this action"
                                        },
                                        "timestamp": {
                                            "type": "string",
                                            "format": "date-time"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "API token not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "not_found"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "API token not found"
                                        },
                                        "timestamp": {
                                            "type": "string",
                                            "format": "date-time"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "ApiKeyAuth": []
                    }
                ]
            }
        },
        "/api/v1/auth/tokens": {
            "get": {
                "tags": [
                    "API Tokens"
                ],
                "summary": "Get user's API tokens",
                "description": "Retrieve a list of all API tokens for the authenticated user",
                "operationId": "getUserApiTokens",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "API tokens retrieved successfully"
                                        },
                                        "timestamp": {
                                            "type": "string",
                                            "format": "date-time"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/ApiTokenResource"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "unauthorized"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Authentication credentials are required or invalid."
                                        },
                                        "timestamp": {
                                            "type": "string",
                                            "format": "date-time"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "ApiKeyAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "API Tokens"
                ],
                "summary": "Create a new API token",
                "description": "Create a new API token for the authenticated user",
                "operationId": "createApiToken",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Mobile App Token"
                                    },
                                    "abilities": {
                                        "description": "Token abilities (permissions)",
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        },
                                        "example": [
                                            "read",
                                            "write"
                                        ]
                                    },
                                    "expires_at": {
                                        "description": "Token expiration date (optional)",
                                        "type": "string",
                                        "format": "date",
                                        "example": "2024-12-31"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "API token created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "created"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "API token created successfully"
                                        },
                                        "timestamp": {
                                            "type": "string",
                                            "format": "date-time"
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "Mobile App Token"
                                                },
                                                "abilities": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "read"
                                                    }
                                                },
                                                "plaintext_token": {
                                                    "type": "string",
                                                    "example": "1|xyz...abc"
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                },
                                                "expires_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "nullable": true
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "validation_error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Validation failed"
                                        },
                                        "timestamp": {
                                            "type": "string",
                                            "format": "date-time"
                                        },
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Rate limit exceeded",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "too_many_requests"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "You have reached the maximum number of API tokens allowed"
                                        },
                                        "timestamp": {
                                            "type": "string",
                                            "format": "date-time"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "ApiKeyAuth": []
                    }
                ]
            }
        },
        "/api/v1/decks/{slug}": {
            "get": {
                "tags": [
                    "Decks"
                ],
                "summary": "Get a specific deck",
                "description": "Retrieve detailed information about a specific deck",
                "operationId": "getDeck",
                "parameters": [
                    {
                        "name": "slug",
                        "in": "path",
                        "description": "Deck slug (URL-friendly identifier)",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "spanish-vocabulary"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response with deck details",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Deck retrieved successfully"
                                        },
                                        "timestamp": {
                                            "type": "string",
                                            "format": "date-time"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/DeckResource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Deck not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "not_found"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "The requested resource was not found"
                                        },
                                        "timestamp": {
                                            "type": "string",
                                            "format": "date-time"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "ApiKeyAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Decks"
                ],
                "summary": "Update a deck",
                "description": "Update an existing deck for the authenticated user",
                "operationId": "updateDeck",
                "parameters": [
                    {
                        "name": "slug",
                        "in": "path",
                        "description": "Deck slug (URL-friendly identifier)",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "spanish-vocabulary"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Advanced Spanish Vocabulary"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Advanced Spanish words for intermediate learners"
                                    },
                                    "is_public": {
                                        "type": "boolean",
                                        "example": false
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Deck updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "updated"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Deck updated successfully"
                                        },
                                        "timestamp": {
                                            "type": "string",
                                            "format": "date-time"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/DeckResource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - User doesn't own this deck",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "forbidden"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "You do not have permission to perform this action"
                                        },
                                        "timestamp": {
                                            "type": "string",
                                            "format": "date-time"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "ApiKeyAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Decks"
                ],
                "summary": "Delete a deck",
                "description": "Delete an existing deck for the authenticated user",
                "operationId": "deleteDeck",
                "parameters": [
                    {
                        "name": "slug",
                        "in": "path",
                        "description": "Deck slug (URL-friendly identifier)",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "spanish-vocabulary"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Deck deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "deleted"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Deck deleted successfully"
                                        },
                                        "timestamp": {
                                            "type": "string",
                                            "format": "date-time"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - User doesn't own this deck",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "forbidden"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "You do not have permission to perform this action"
                                        },
                                        "timestamp": {
                                            "type": "string",
                                            "format": "date-time"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "ApiKeyAuth": []
                    }
                ]
            }
        },
        "/api/v1/decks/{deck_slug}/flashcards/{flashcard_id}": {
            "get": {
                "tags": [
                    "Flashcards"
                ],
                "summary": "Get a specific flashcard",
                "description": "Retrieve detailed information about a specific flashcard",
                "operationId": "getFlashcard",
                "parameters": [
                    {
                        "name": "deck_slug",
                        "in": "path",
                        "description": "Deck slug (URL-friendly identifier)",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "spanish-vocabulary"
                        }
                    },
                    {
                        "name": "flashcard_id",
                        "in": "path",
                        "description": "Flashcard ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 123
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response with flashcard details",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Flashcard retrieved successfully"
                                        },
                                        "timestamp": {
                                            "type": "string",
                                            "format": "date-time"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/FlashcardResource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Flashcard not found or not accessible",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "not_found"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Flashcard not found or not accessible"
                                        },
                                        "timestamp": {
                                            "type": "string",
                                            "format": "date-time"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "ApiKeyAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Flashcards"
                ],
                "summary": "Update a flashcard",
                "description": "Update an existing flashcard in a deck",
                "operationId": "updateFlashcard",
                "parameters": [
                    {
                        "name": "deck_slug",
                        "in": "path",
                        "description": "Deck slug (URL-friendly identifier)",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "spanish-vocabulary"
                        }
                    },
                    {
                        "name": "flashcard_id",
                        "in": "path",
                        "description": "Flashcard ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 123
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "question": {
                                        "type": "string",
                                        "example": "What is 'goodbye' in Spanish?"
                                    },
                                    "answer": {
                                        "type": "string",
                                        "example": "Adiós"
                                    },
                                    "hint": {
                                        "type": "string",
                                        "example": "A farewell greeting"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Flashcard updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "updated"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Flashcard updated successfully"
                                        },
                                        "timestamp": {
                                            "type": "string",
                                            "format": "date-time"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/FlashcardResource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - User doesn't own this deck",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "forbidden"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "You do not have permission to perform this action"
                                        },
                                        "timestamp": {
                                            "type": "string",
                                            "format": "date-time"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "ApiKeyAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Flashcards"
                ],
                "summary": "Delete a flashcard",
                "description": "Delete an existing flashcard from a deck",
                "operationId": "deleteFlashcard",
                "parameters": [
                    {
                        "name": "deck_slug",
                        "in": "path",
                        "description": "Deck slug (URL-friendly identifier)",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "spanish-vocabulary"
                        }
                    },
                    {
                        "name": "flashcard_id",
                        "in": "path",
                        "description": "Flashcard ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 123
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Flashcard deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "deleted"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Flashcard deleted successfully"
                                        },
                                        "timestamp": {
                                            "type": "string",
                                            "format": "date-time"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - User doesn't own this deck",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "forbidden"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "You do not have permission to perform this action"
                                        },
                                        "timestamp": {
                                            "type": "string",
                                            "format": "date-time"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "ApiKeyAuth": []
                    }
                ]
            }
        },
        "/api/v1/decks/{slug}/flashcards": {
            "get": {
                "tags": [
                    "Flashcards"
                ],
                "summary": "Get flashcards for a deck",
                "description": "Retrieve a paginated list of flashcards for a specific deck",
                "operationId": "getDeckFlashcards",
                "parameters": [
                    {
                        "name": "slug",
                        "in": "path",
                        "description": "Deck slug (URL-friendly identifier)",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "spanish-vocabulary"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number for pagination",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of items per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 15
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Flashcards retrieved successfully"
                                        },
                                        "timestamp": {
                                            "type": "string",
                                            "format": "date-time",
                                            "example": "2025-01-10T12:00:00.000Z"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/FlashcardResource"
                                            }
                                        },
                                        "pagination": {
                                            "properties": {
                                                "current_page": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "last_page": {
                                                    "type": "integer",
                                                    "example": 5
                                                },
                                                "per_page": {
                                                    "type": "integer",
                                                    "example": 15
                                                },
                                                "total": {
                                                    "type": "integer",
                                                    "example": 75
                                                },
                                                "from": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "to": {
                                                    "type": "integer",
                                                    "example": 15
                                                },
                                                "has_more_pages": {
                                                    "type": "boolean",
                                                    "example": true
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "meta": {
                                            "properties": {
                                                "deck": {
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Deck not found or not accessible",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "not_found"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Deck not found or not accessible"
                                        },
                                        "timestamp": {
                                            "type": "string",
                                            "format": "date-time",
                                            "example": "2025-01-10T12:00:00.000Z"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "ApiKeyAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Flashcards"
                ],
                "summary": "Create a new flashcard",
                "description": "Create a new flashcard for a specific deck",
                "operationId": "createFlashcard",
                "parameters": [
                    {
                        "name": "slug",
                        "in": "path",
                        "description": "Deck slug (URL-friendly identifier)",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "spanish-vocabulary"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "question",
                                    "answer"
                                ],
                                "properties": {
                                    "question": {
                                        "type": "string",
                                        "example": "What is 'hello' in Spanish?"
                                    },
                                    "answer": {
                                        "type": "string",
                                        "example": "Hola"
                                    },
                                    "hint": {
                                        "type": "string",
                                        "example": "A common greeting"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Flashcard created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "created"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Flashcard created successfully"
                                        },
                                        "timestamp": {
                                            "type": "string",
                                            "format": "date-time"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/FlashcardResource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - User doesn't own this deck",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "forbidden"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "You do not have permission to perform this action"
                                        },
                                        "timestamp": {
                                            "type": "string",
                                            "format": "date-time"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "ApiKeyAuth": []
                    }
                ]
            }
        },
        "/api/v1/decks": {
            "get": {
                "tags": [
                    "Decks"
                ],
                "summary": "Get all public decks",
                "description": "Retrieve a paginated list of all public decks",
                "operationId": "getPublicDecks",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number for pagination",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of items per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 15
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Public decks retrieved successfully"
                                        },
                                        "timestamp": {
                                            "type": "string",
                                            "format": "date-time"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/DeckResource"
                                            }
                                        },
                                        "pagination": {
                                            "properties": {
                                                "current_page": {
                                                    "type": "integer"
                                                },
                                                "last_page": {
                                                    "type": "integer"
                                                },
                                                "per_page": {
                                                    "type": "integer"
                                                },
                                                "total": {
                                                    "type": "integer"
                                                },
                                                "from": {
                                                    "type": "integer"
                                                },
                                                "to": {
                                                    "type": "integer"
                                                },
                                                "has_more_pages": {
                                                    "type": "boolean"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "unauthorized"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized"
                                        },
                                        "timestamp": {
                                            "type": "string",
                                            "format": "date-time",
                                            "example": "2025-01-10T12:00:00.000Z"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "ApiKeyAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Decks"
                ],
                "summary": "Create a new deck",
                "description": "Create a new flashcard deck for the authenticated user",
                "operationId": "createDeck",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Spanish Vocabulary"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Basic Spanish words for beginners"
                                    },
                                    "is_public": {
                                        "type": "boolean",
                                        "example": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Deck created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "created"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Deck created successfully"
                                        },
                                        "timestamp": {
                                            "type": "string",
                                            "format": "date-time"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/DeckResource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "validation_error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Validation failed"
                                        },
                                        "timestamp": {
                                            "type": "string",
                                            "format": "date-time"
                                        },
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "ApiKeyAuth": []
                    }
                ]
            }
        },
        "/api/v1/search/decks": {
            "get": {
                "tags": [
                    "Decks"
                ],
                "summary": "Search decks",
                "description": "Search for public decks by name or description",
                "operationId": "searchDecks",
                "parameters": [
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Search query string",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "spanish"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number for pagination",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of items per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 15
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Search results",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Search completed successfully"
                                        },
                                        "timestamp": {
                                            "type": "string",
                                            "format": "date-time"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/DeckResource"
                                            }
                                        },
                                        "meta": {
                                            "properties": {
                                                "query": {
                                                    "type": "string",
                                                    "example": "spanish"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error - search query required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "validation_error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Validation failed"
                                        },
                                        "timestamp": {
                                            "type": "string",
                                            "format": "date-time"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "ApiKeyAuth": []
                    }
                ]
            }
        }
    },
    "components": {
        "schemas": {
            "ApiTokenResource": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "example": "CI Token"
                    },
                    "abilities": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "example": [
                            "*"
                        ]
                    },
                    "last_used_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-08-11T09:17:18Z",
                        "nullable": true
                    },
                    "expires_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-12-31T23:59:59Z",
                        "nullable": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-08-11T09:17:18Z",
                        "nullable": true
                    },
                    "is_expired": {
                        "type": "boolean",
                        "example": false
                    }
                },
                "type": "object"
            },
            "DeckResource": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "example": "Programming Basics"
                    },
                    "slug": {
                        "type": "string",
                        "example": "programming-basics"
                    },
                    "description": {
                        "type": "string",
                        "example": "Essential programming concepts and terminology"
                    },
                    "is_public": {
                        "type": "boolean",
                        "example": true
                    },
                    "flashcards_count": {
                        "type": "integer",
                        "example": 8,
                        "nullable": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "FlashcardResource": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "question": {
                        "type": "string",
                        "example": "What does HTML stand for?"
                    },
                    "answer": {
                        "type": "string",
                        "example": "HyperText Markup Language"
                    },
                    "difficulty": {
                        "type": "string",
                        "example": "easy",
                        "nullable": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    }
                },
                "type": "object"
            }
        },
        "securitySchemes": {
            "BearerAuth": {
                "type": "http",
                "description": "Bearer token authentication. Include your API token in the Authorization header as 'Bearer <your-api-token>'.",
                "bearerFormat": "API-Token",
                "scheme": "bearer"
            },
            "ApiKeyAuth": {
                "type": "apiKey",
                "description": "API Key authentication (legacy support). Include your API key in the X-API-Key header.",
                "name": "X-API-Key",
                "in": "header"
            }
        }
    },
    "tags": [
        {
            "name": "Decks",
            "description": "Operations related to flashcard decks"
        },
        {
            "name": "Flashcards",
            "description": "Operations related to individual flashcards"
        },
        {
            "name": "API Tokens",
            "description": "API Tokens"
        }
    ]
}